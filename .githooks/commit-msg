#!/usr/bin/env bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

MSG_FILE=$1
FILE_CONTENT="$(cat $MSG_FILE)"
REGEX="(((feat|wip|fix|chore|merge|test)\(.{2,20}\):\[CDM-\d+])|(chore|merge)\(.{2,50}\):) .{5,60}"
# shellcheck disable=SC2089
ERROR_MSG="# Commit message format must match regex \"${REGEX}\""

if java ./.githooks/RegexTestHarness.java "$REGEX" "$FILE_CONTENT"; then
    echo "# Nice commit!"
else
      echo "# Bad commit \"$FILE_CONTENT\", check format."
      echo "# Please use the following pattern for your commit messages:"
      echo "# \"type(affected feature/part):[TICKET_REFERENCE] description\""
      echo "# Types are: feat, wip, fix, chore, merge, test"
      # shellcheck disable=SC2090
      echo "$ERROR_MSG"
      exit 1
fi
