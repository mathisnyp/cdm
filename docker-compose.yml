version: '3.9'

services:
  web-ui:
    hostname: web-ui
    build: ./frontend
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend-for-frontend
  zookeeper:
    build: external/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    build: ./external/kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_BROKERCONNECT: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  geoservice:
    build: ./services/geo-service/
    hostname: geoservice
    depends_on:
      - geoservice-neo4j
      - kafka
    environment:
      kafka-bootstrap-servers: kafka:29092
      neo4j-uri: neo4j://geoservice-neo4j:7687
      neo4j-username: neo4j
      neo4j-password: password
    ports:
      - "8079:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  geoservice-neo4j:
    build: ./external/databases/neo4j
    hostname: geoservice-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - ./external/databases/neo4j/db/data:/data
      - ./external/databases/neo4j/db/conf:/conf
      - ./external/databases/neo4j/db/logs:/logs
      - ./external/databases/neo4j/db/plugins:/plugins
  auth-service:
    build: ./services/auth/service
    ports:
      - "8080:80"
    depends_on:
      - auth-service-db
    extra_hosts:
      - "host.docker.internal:host-gateway"
  auth-service-db:
    build: ./external/databases/postgresql
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: AuthenticationService
    ports:
      - "5432:5432"
  backend-for-frontend:
    build: ./backend-for-frontend
    hostname: bff
    ports:
      - "6060:8080"
    environment:
      kafka-bootstrap-servers: kafka:29092
      auth-service-endpoint: http://host.docker.internal:8080
    depends_on:
      - auth-service
    extra_hosts:
      - "host.docker.internal:host-gateway"


# REMOVE
volumes:
  auth_postgres_data: {}
  grafana-storage: {}
