<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ae8afb47-ff3d-4994-bd8a-77b9ab43e85c" name="Changes" comment="chore: add react native template">
      <change afterPath="$PROJECT_DIR$/.idea/ClojureProjectResolveSettings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/databases/mongodb/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/databases/neo4j/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/databases/postgresql/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/kafka/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/observability/grafana/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/observability/loki/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/observability/mimir/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/observability/tempo/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/zookeeeper/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/terraform/main.tf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/terraform/variables.tf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/build.gradle.kts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/sample-node-service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/sample-node-service/build.gradle.kts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/sample-python-service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/sample-python-service/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/sample-python-service/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/securityhotspotstore/index.pb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/app/(tabs)/_layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/app/(tabs)/_layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/app/(tabs)/two.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/app/(tabs)/two.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/assets/images/adaptive-icon.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/assets/images/icon.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/assets/images/splash.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/build.gradle.kts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/assets/images/background.png" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/assets/images/background.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/assets/images/light.png" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/assets/images/light.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/login-app/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/login-app/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/screens/LoginScreen.js" beforeDir="false" afterPath="$PROJECT_DIR$/login-app/screens/LoginScreen.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/login-app/screens/SignupScreen.js" beforeDir="false" afterPath="$PROJECT_DIR$/login-app/screens/SignupScreen.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/services/sample-node-service/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node/app.js" beforeDir="false" afterPath="$PROJECT_DIR$/services/sample-node-service/app.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/sample-node-service/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/sample-node-service/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/settings.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/settings.gradle.kts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2Xni8jNNWNN0uhD60zbItD8aox8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
    "WebServerToolWindowFactoryState": "false",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "main",
    "jdk.selected.JAVA_MODULE": "corretto-17",
    "last_opened_file_path": "A:/projects/city-disaster-management/services/sample-node-service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ruby.rails.projectView.checked": "true",
    "show.migrate.to.gradle.popup": "false",
    "ts.external.directory.path": "A:\\projects\\city-disaster-management\\frontend\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="A:\projects\city-disaster-management\services\sample-node-service" />
      <recent name="A:\projects\city-disaster-management\services" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="A:\projects\city-disaster-management\services\sample-node-service" />
      <recent name="A:\projects\city-disaster-management\frontend\assets\images" />
      <recent name="$PROJECT_DIR$/Frontend" />
    </key>
  </component>
  <component name="RubyModuleManagerSettings">
    <option name="blackListedRootsPaths">
      <list>
        <option value="$PROJECT_DIR$/frontend" />
        <option value="$PROJECT_DIR$" />
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Gradle.city-disaster-management [clean]">
    <configuration default="true" type="Babashka" factoryName="BabashkaLocalRepl" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="bbPath" value="" />
      <setting name="parameters" value="" />
      <option name="PARENT_ENVS" value="true" />
      <setting name="workingDir" value="" />
      <setting name="focusEditor" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <option name="configVersion" value="1" />
      <option name="options" />
      <option name="profiles" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <setting name="focusEditor" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="city-disaster-management [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="clean" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="city-disaster-management [publishFrontend]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="publishFrontend" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration default="true" type="aws.lambda" factoryName="Local">
      <option name="credentialProviderId" />
      <option name="regionId" />
      <option name="debugHost" value="localhost" />
      <option name="architecture" />
      <option name="environmentVariables">
        <map />
      </option>
      <option name="handler" />
      <option name="image" value="false" />
      <option name="logicalFunctionName" />
      <option name="memorySize" value="128" />
      <option name="pathMappings">
        <list />
      </option>
      <option name="platform" />
      <option name="runtime" />
      <option name="templateFile" />
      <option name="timeout" value="300" />
      <option name="useTemplate" value="false" />
      <option name="input" />
      <option name="inputIsFile" value="false" />
      <sam>
        <option name="additionalBuildArgs" />
        <option name="additionalLocalArgs" />
        <option name="buildInContainer" value="false" />
        <option name="dockerNetwork" />
        <option name="skipImagePull" value="false" />
      </sam>
      <method v="2" />
    </configuration>
    <configuration default="true" type="aws.lambda" factoryName="Remote">
      <option name="credentialProviderId" />
      <option name="regionId" />
      <option name="functionName" />
      <option name="input" />
      <option name="inputIsFile" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/login-app/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="web (1)" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/frontend/package.json" />
      <command value="run" />
      <scripts>
        <script value="web" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="web" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/login-app/package.json" />
      <command value="run" />
      <scripts>
        <script value="web" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.city-disaster-management [clean]" />
        <item itemvalue="npm.web (1)" />
        <item itemvalue="npm.web" />
        <item itemvalue="npm.start" />
        <item itemvalue="Gradle.city-disaster-management [publishFrontend]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ae8afb47-ff3d-4994-bd8a-77b9ab43e85c" name="Changes" comment="" />
      <created>1699271092044</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1699271092044</updated>
      <workItem from="1699271092048" duration="89000" />
      <workItem from="1699271934400" duration="3669000" />
      <workItem from="1699438344861" duration="3330000" />
      <workItem from="1700170512373" duration="1756000" />
      <workItem from="1700421060999" duration="5911000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="chore: add react native template" />
    <option name="LAST_COMMIT_MESSAGE" value="chore: add react native template" />
  </component>
</project>