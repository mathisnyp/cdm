stages:
  - build
  - test
  - code-analysis
  - publish
  - deploy

build-job:
  stage: build
  script:
    - ./gradlew build -x test installFrontend
  artifacts:
    paths:
      - build
      - backend-for-frontend/build
      - services/auth/java-api/build
      - services/gen-ai-service/java-api/build
      - services/communication-service/build
      - services/dublin-open-data-service/build
      - services/geo-service/build
      - services/incident-service/build

export-ui:
  stage: build
  script:
    - ./gradlew installNode
    - ./gradlew installPackageManager
    - ./gradlew installFrontend
    - ./gradlew export-ui
  artifacts:
    paths:
      - frontend/dist

python-test:
  stage: test
  script:
    - ./gradlew pTest
  dependencies:
    - build-job
    - export-ui
  artifacts:
    paths:
      - services/auth/service/src/test/python/
      - services/gen-ai-service/service/src/test/python/

java-test:
  stage: test
  script:
    - ./gradlew test
  dependencies:
    - build-job
    - export-ui
  artifacts:
    paths:
      - build
      - backend-for-frontend/build
      - services/auth/java-api/build
      - services/gen-ai-service/java-api/build
      - services/communication-service/build
      - services/dublin-open-data-service/build
      - services/geo-service/build
      - incident-service/build

ui-test:
  stage: test
  script:
    - ./gradlew installNode
    - ./gradlew installPackageManager
    - ./gradlew installFrontend
    - ./gradlew jest
  artifacts:
    paths:
      - frontend/coverage


sonarscan:
  stage:
    code-analysis
  dependencies:
    - python-test
    - ui-test
    - java-test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - ./gradlew sonar
    - echo "No lint issues found."


deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
