"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPrinter = void 0;
const prettier_1 = require("prettier");
const { hardline, indent, join } = prettier_1.doc.builders;
function genericPrint(path, _options, print) {
    const node = path.node;
    switch (node.type) {
        case 'program':
            return [path.call(print, 'expression'), hardline];
        case 'array':
            return node.elements.length === 0
                ? '[]'
                : [
                    '[',
                    indent([
                        hardline,
                        join([',', hardline], path.map(print, 'elements')),
                    ]),
                    hardline,
                    ']',
                ];
        case 'object':
            return node.properties.length === 0
                ? '{}'
                : [
                    '{',
                    indent([
                        hardline,
                        join([',', hardline], path.map(print, 'properties')),
                    ]),
                    hardline,
                    '}',
                ];
        case 'object property':
            return [path.call(print, 'key'), ': ', path.call(print, 'value')];
        case 'null':
            return 'null';
        case 'true':
            return 'true';
        case 'false':
            return 'false';
        case 'string':
        case 'number':
        case 'identifier':
            return JSON.stringify(node.value);
        default:
            /* istanbul ignore next */
            throw new Error('unknown type: ' + JSON.stringify(node.type));
    }
}
function clean(node /*, newNode: Node, parent*/) {
    if (node.type === 'identifier') {
        return { ...node, type: 'string' };
    }
    return;
}
function createPrinter() {
    return {
        print: genericPrint,
        massageAstNode: clean,
    };
}
exports.createPrinter = createPrinter;
