{"version":3,"sources":["../../src/core/Params.ts"],"names":["Params","params","index","key","value"],"mappings":";;;;;;;;;;;;;;;AAIA;AACA;AACA;IACqBA,M;AACpB;AACD;AACA;AAIC,kBAAYC,MAAZ,EAAuD;AAAA;;AAAA;;AAAA;;AACtD,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,CAAb;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,mBAAmC;AAAA,UAA7BC,GAA6B,QAA7BA,GAA6B;AAAA,UAAxBC,KAAwB,QAAxBA,KAAwB;;AAClC,UAAI,CAAC,KAAKH,MAAV,EAAkB;AACjB,eAAOG,KAAP;AACA;;AAED,UAAID,GAAJ,EAAS;AACR,eAAQ,KAAKF,MAAN,CAA4BE,GAA5B,CAAP;AACA;;AACD,aAAQ,KAAKF,MAAN,CAA0B,KAAKC,KAAL,EAA1B,CAAP;AACA","sourcesContent":["import type { Token } from './token';\n\nexport type ParamItems = { [k: string]: string };\n\n/**\n * Handles placeholder replacement with given params.\n */\nexport default class Params {\n\t/**\n\t * @param {ParamItems} params\n\t */\n\tparams: ParamItems | string[] | undefined;\n\tindex: number;\n\n\tconstructor(params: ParamItems | string[] | undefined) {\n\t\tthis.params = params;\n\t\tthis.index = 0;\n\t}\n\n\t/**\n\t * Returns param value that matches given placeholder with param key.\n\t * @param {Token} token\n\t * @return {string} param or token.value when params are missing\n\t */\n\tget({ key, value }: Token): string {\n\t\tif (!this.params) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (key) {\n\t\t\treturn (this.params as ParamItems)[key];\n\t\t}\n\t\treturn (this.params as string[])[this.index++];\n\t}\n}\n"],"file":"Params.js"}