// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API getSupportInfo() with version 0.0.0 -> 1.0.0 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -12,19 +12,35 @@
    \\"options\\": Object {
      \\"bracketSpacing\\": Object {
        \\"default\\": true,
        \\"type\\": \\"boolean\\",
      },
+     \\"jsxBracketSameLine\\": Object {
+       \\"default\\": false,
+       \\"type\\": \\"boolean\\",
+     },
+     \\"parser\\": Object {
+       \\"choices\\": Array [
+         \\"babylon\\",
+         \\"flow\\",
+       ],
+       \\"default\\": \\"babylon\\",
+       \\"type\\": \\"choice\\",
+     },
      \\"printWidth\\": Object {
        \\"default\\": 80,
        \\"range\\": Object {
          \\"end\\": Infinity,
          \\"start\\": 0,
          \\"step\\": 1,
        },
        \\"type\\": \\"int\\",
      },
+     \\"semi\\": Object {
+       \\"default\\": true,
+       \\"type\\": \\"boolean\\",
+     },
      \\"singleQuote\\": Object {
        \\"default\\": false,
        \\"type\\": \\"boolean\\",
      },
      \\"tabWidth\\": Object {
@@ -39,17 +55,15 @@
      \\"trailingComma\\": Object {
        \\"choices\\": Array [
          \\"none\\",
          \\"es5\\",
          \\"all\\",
-         true,
-         false,
        ],
-       \\"default\\": false,
+       \\"default\\": \\"none\\",
        \\"type\\": \\"choice\\",
      },
-     \\"useFlowParser\\": Object {
+     \\"useTabs\\": Object {
        \\"default\\": false,
        \\"type\\": \\"boolean\\",
      },
    },
  }"
`;

exports[`API getSupportInfo() with version 0.0.0 1`] = `
Object {
  "languages": Object {
    "JSX": Array [
      "babylon",
      "flow",
    ],
    "JavaScript": Array [
      "babylon",
      "flow",
    ],
  },
  "options": Object {
    "bracketSpacing": Object {
      "default": true,
      "type": "boolean",
    },
    "printWidth": Object {
      "default": 80,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "singleQuote": Object {
      "default": false,
      "type": "boolean",
    },
    "tabWidth": Object {
      "default": 2,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "trailingComma": Object {
      "choices": Array [
        "none",
        "es5",
        "all",
        true,
        false,
      ],
      "default": false,
      "type": "choice",
    },
    "useFlowParser": Object {
      "default": false,
      "type": "boolean",
    },
  },
}
`;

exports[`API getSupportInfo() with version 1.0.0 -> 1.4.0 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -1,29 +1,56 @@
  Object {
    \\"languages\\": Object {
+     \\"CSS\\": Array [
+       \\"postcss\\",
+     ],
      \\"JSX\\": Array [
        \\"babylon\\",
        \\"flow\\",
      ],
      \\"JavaScript\\": Array [
        \\"babylon\\",
        \\"flow\\",
      ],
+     \\"Less\\": Array [
+       \\"postcss\\",
+     ],
+     \\"SCSS\\": Array [
+       \\"postcss\\",
+     ],
+     \\"TypeScript\\": Array [
+       \\"typescript\\",
+     ],
    },
    \\"options\\": Object {
      \\"bracketSpacing\\": Object {
        \\"default\\": true,
        \\"type\\": \\"boolean\\",
      },
+     \\"cursorOffset\\": Object {
+       \\"default\\": -1,
+       \\"range\\": Object {
+         \\"end\\": Infinity,
+         \\"start\\": -1,
+         \\"step\\": 1,
+       },
+       \\"type\\": \\"int\\",
+     },
+     \\"filepath\\": Object {
+       \\"default\\": undefined,
+       \\"type\\": \\"path\\",
+     },
      \\"jsxBracketSameLine\\": Object {
        \\"default\\": false,
        \\"type\\": \\"boolean\\",
      },
      \\"parser\\": Object {
        \\"choices\\": Array [
          \\"babylon\\",
          \\"flow\\",
+         \\"typescript\\",
+         \\"postcss\\",
        ],
        \\"default\\": \\"babylon\\",
        \\"type\\": \\"choice\\",
      },
      \\"printWidth\\": Object {
@@ -33,10 +60,28 @@
          \\"start\\": 0,
          \\"step\\": 1,
        },
        \\"type\\": \\"int\\",
      },
+     \\"rangeEnd\\": Object {
+       \\"default\\": Infinity,
+       \\"range\\": Object {
+         \\"end\\": Infinity,
+         \\"start\\": 0,
+         \\"step\\": 1,
+       },
+       \\"type\\": \\"int\\",
+     },
+     \\"rangeStart\\": Object {
+       \\"default\\": 0,
+       \\"range\\": Object {
+         \\"end\\": Infinity,
+         \\"start\\": 0,
+         \\"step\\": 1,
+       },
+       \\"type\\": \\"int\\",
+     },
      \\"semi\\": Object {
        \\"default\\": true,
        \\"type\\": \\"boolean\\",
      },
      \\"singleQuote\\": Object {"
`;

exports[`API getSupportInfo() with version 1.4.0 -> 1.5.0 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -1,10 +1,16 @@
  Object {
    \\"languages\\": Object {
      \\"CSS\\": Array [
        \\"postcss\\",
      ],
+     \\"GraphQL\\": Array [
+       \\"graphql\\",
+     ],
+     \\"JSON\\": Array [
+       \\"json\\",
+     ],
      \\"JSX\\": Array [
        \\"babylon\\",
        \\"flow\\",
      ],
      \\"JavaScript\\": Array [
@@ -47,10 +53,12 @@
        \\"choices\\": Array [
          \\"babylon\\",
          \\"flow\\",
          \\"typescript\\",
          \\"postcss\\",
+         \\"json\\",
+         \\"graphql\\",
        ],
        \\"default\\": \\"babylon\\",
        \\"type\\": \\"choice\\",
      },
      \\"printWidth\\": Object {"
`;

exports[`API getSupportInfo() with version 1.5.0 -> 1.7.1 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -1,9 +1,9 @@
  Object {
    \\"languages\\": Object {
      \\"CSS\\": Array [
-       \\"postcss\\",
+       \\"css\\",
      ],
      \\"GraphQL\\": Array [
        \\"graphql\\",
      ],
      \\"JSON\\": Array [
@@ -16,14 +16,14 @@
      \\"JavaScript\\": Array [
        \\"babylon\\",
        \\"flow\\",
      ],
      \\"Less\\": Array [
-       \\"postcss\\",
+       \\"less\\",
      ],
      \\"SCSS\\": Array [
-       \\"postcss\\",
+       \\"scss\\",
      ],
      \\"TypeScript\\": Array [
        \\"typescript\\",
      ],
    },
@@ -52,11 +52,13 @@
      \\"parser\\": Object {
        \\"choices\\": Array [
          \\"babylon\\",
          \\"flow\\",
          \\"typescript\\",
-         \\"postcss\\",
+         \\"css\\",
+         \\"less\\",
+         \\"scss\\",
          \\"json\\",
          \\"graphql\\",
        ],
        \\"default\\": \\"babylon\\",
        \\"type\\": \\"choice\\",
@@ -86,10 +88,14 @@
          \\"start\\": 0,
          \\"step\\": 1,
        },
        \\"type\\": \\"int\\",
      },
+     \\"requirePragma\\": Object {
+       \\"default\\": false,
+       \\"type\\": \\"boolean\\",
+     },
      \\"semi\\": Object {
        \\"default\\": true,
        \\"type\\": \\"boolean\\",
      },
      \\"singleQuote\\": Object {"
`;

exports[`API getSupportInfo() with version 1.7.1 -> 1.8.0 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -18,10 +18,13 @@
        \\"flow\\",
      ],
      \\"Less\\": Array [
        \\"less\\",
      ],
+     \\"Markdown\\": Array [
+       \\"markdown\\",
+     ],
      \\"SCSS\\": Array [
        \\"scss\\",
      ],
      \\"TypeScript\\": Array [
        \\"typescript\\",
@@ -43,10 +46,14 @@
      },
      \\"filepath\\": Object {
        \\"default\\": undefined,
        \\"type\\": \\"path\\",
      },
+     \\"insertPragma\\": Object {
+       \\"default\\": false,
+       \\"type\\": \\"boolean\\",
+     },
      \\"jsxBracketSameLine\\": Object {
        \\"default\\": false,
        \\"type\\": \\"boolean\\",
      },
      \\"parser\\": Object {
@@ -57,10 +64,11 @@
          \\"css\\",
          \\"less\\",
          \\"scss\\",
          \\"json\\",
          \\"graphql\\",
+         \\"markdown\\",
        ],
        \\"default\\": \\"babylon\\",
        \\"type\\": \\"choice\\",
      },
      \\"printWidth\\": Object {"
`;

exports[`API getSupportInfo() with version 1.8.0 -> 1.8.2 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -78,10 +78,18 @@
          \\"start\\": 0,
          \\"step\\": 1,
        },
        \\"type\\": \\"int\\",
      },
+     \\"proseWrap\\": Object {
+       \\"choices\\": Array [
+         false,
+         true,
+       ],
+       \\"default\\": true,
+       \\"type\\": \\"choice\\",
+     },
      \\"rangeEnd\\": Object {
        \\"default\\": Infinity,
        \\"range\\": Object {
          \\"end\\": Infinity,
          \\"start\\": 0,"
`;

exports[`API getSupportInfo() with version 1.8.2 -> undefined 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -29,10 +29,18 @@
      \\"TypeScript\\": Array [
        \\"typescript\\",
      ],
    },
    \\"options\\": Object {
+     \\"arrowParens\\": Object {
+       \\"choices\\": Array [
+         \\"avoid\\",
+         \\"always\\",
+       ],
+       \\"default\\": \\"avoid\\",
+       \\"type\\": \\"choice\\",
+     },
      \\"bracketSpacing\\": Object {
        \\"default\\": true,
        \\"type\\": \\"boolean\\",
      },
      \\"cursorOffset\\": Object {
@@ -80,14 +88,15 @@
        },
        \\"type\\": \\"int\\",
      },
      \\"proseWrap\\": Object {
        \\"choices\\": Array [
-         false,
-         true,
+         \\"always\\",
+         \\"never\\",
+         \\"preserve\\",
        ],
-       \\"default\\": true,
+       \\"default\\": \\"preserve\\",
        \\"type\\": \\"choice\\",
      },
      \\"rangeEnd\\": Object {
        \\"default\\": Infinity,
        \\"range\\": Object {"
`;

exports[`CLI --support-info (stderr) 1`] = `""`;

exports[`CLI --support-info (stdout) 1`] = `
"{
  \\"languages\\": [
    {
      \\"name\\": \\"JavaScript\\",
      \\"since\\": \\"0.0.0\\",
      \\"parsers\\": [\\"babylon\\", \\"flow\\"],
      \\"group\\": \\"JavaScript\\",
      \\"tmScope\\": \\"source.js\\",
      \\"aceMode\\": \\"javascript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"codemirrorMimeType\\": \\"text/javascript\\",
      \\"aliases\\": [\\"js\\", \\"node\\"],
      \\"extensions\\": [
        \\".js\\",
        \\"._js\\",
        \\".bones\\",
        \\".es\\",
        \\".es6\\",
        \\".frag\\",
        \\".gs\\",
        \\".jake\\",
        \\".jsb\\",
        \\".jscad\\",
        \\".jsfl\\",
        \\".jsm\\",
        \\".jss\\",
        \\".mjs\\",
        \\".njs\\",
        \\".pac\\",
        \\".sjs\\",
        \\".ssjs\\",
        \\".xsjs\\",
        \\".xsjslib\\"
      ],
      \\"filenames\\": [\\"Jakefile\\"],
      \\"linguistLanguageId\\": 183,
      \\"vscodeLanguageIds\\": [\\"javascript\\"]
    },
    {
      \\"name\\": \\"JSX\\",
      \\"since\\": \\"0.0.0\\",
      \\"parsers\\": [\\"babylon\\", \\"flow\\"],
      \\"group\\": \\"JavaScript\\",
      \\"extensions\\": [\\".jsx\\"],
      \\"tmScope\\": \\"source.js.jsx\\",
      \\"aceMode\\": \\"javascript\\",
      \\"codemirrorMode\\": \\"jsx\\",
      \\"codemirrorMimeType\\": \\"text/jsx\\",
      \\"liguistLanguageId\\": 178,
      \\"vscodeLanguageIds\\": [\\"javascriptreact\\"]
    },
    {
      \\"name\\": \\"TypeScript\\",
      \\"since\\": \\"1.4.0\\",
      \\"parsers\\": [\\"typescript\\"],
      \\"group\\": \\"JavaScript\\",
      \\"aliases\\": [\\"ts\\"],
      \\"extensions\\": [\\".ts\\", \\".tsx\\"],
      \\"tmScope\\": \\"source.ts\\",
      \\"aceMode\\": \\"typescript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"codemirrorMimeType\\": \\"application/typescript\\",
      \\"liguistLanguageId\\": 378,
      \\"vscodeLanguageIds\\": [\\"typescript\\", \\"typescriptreact\\"]
    },
    {
      \\"name\\": \\"JSON\\",
      \\"since\\": \\"1.5.0\\",
      \\"parsers\\": [\\"json\\"],
      \\"group\\": \\"JavaScript\\",
      \\"tmScope\\": \\"source.json\\",
      \\"aceMode\\": \\"json\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"codemirrorMimeType\\": \\"application/json\\",
      \\"extensions\\": [
        \\".json\\",
        \\".json5\\",
        \\".geojson\\",
        \\".JSON-tmLanguage\\",
        \\".topojson\\"
      ],
      \\"filenames\\": [
        \\".arcconfig\\",
        \\".jshintrc\\",
        \\".babelrc\\",
        \\".eslintrc\\",
        \\".prettierrc\\",
        \\"composer.lock\\",
        \\"mcmod.info\\"
      ],
      \\"linguistLanguageId\\": 174,
      \\"vscodeLanguageIds\\": [\\"json\\", \\"jsonc\\"]
    },
    {
      \\"name\\": \\"CSS\\",
      \\"since\\": \\"1.4.0\\",
      \\"parsers\\": [\\"css\\"],
      \\"group\\": \\"CSS\\",
      \\"tmScope\\": \\"source.css\\",
      \\"aceMode\\": \\"css\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"codemirrorMimeType\\": \\"text/css\\",
      \\"extensions\\": [\\".css\\", \\".pcss\\", \\".postcss\\"],
      \\"liguistLanguageId\\": 50,
      \\"vscodeLanguageIds\\": [\\"css\\", \\"postcss\\"]
    },
    {
      \\"name\\": \\"Less\\",
      \\"since\\": \\"1.4.0\\",
      \\"parsers\\": [\\"less\\"],
      \\"group\\": \\"CSS\\",
      \\"extensions\\": [\\".less\\"],
      \\"tmScope\\": \\"source.css.less\\",
      \\"aceMode\\": \\"less\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"codemirrorMimeType\\": \\"text/css\\",
      \\"liguistLanguageId\\": 198,
      \\"vscodeLanguageIds\\": [\\"less\\"]
    },
    {
      \\"name\\": \\"SCSS\\",
      \\"since\\": \\"1.4.0\\",
      \\"parsers\\": [\\"scss\\"],
      \\"group\\": \\"CSS\\",
      \\"tmScope\\": \\"source.scss\\",
      \\"aceMode\\": \\"scss\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"codemirrorMimeType\\": \\"text/x-scss\\",
      \\"extensions\\": [\\".scss\\"],
      \\"liguistLanguageId\\": 329,
      \\"vscodeLanguageIds\\": [\\"scss\\"]
    },
    {
      \\"name\\": \\"GraphQL\\",
      \\"since\\": \\"1.5.0\\",
      \\"parsers\\": [\\"graphql\\"],
      \\"extensions\\": [\\".graphql\\", \\".gql\\"],
      \\"tmScope\\": \\"source.graphql\\",
      \\"aceMode\\": \\"text\\",
      \\"liguistLanguageId\\": 139,
      \\"vscodeLanguageIds\\": [\\"graphql\\"]
    },
    {
      \\"name\\": \\"Markdown\\",
      \\"since\\": \\"1.8.0\\",
      \\"parsers\\": [\\"markdown\\"],
      \\"aliases\\": [\\"pandoc\\"],
      \\"aceMode\\": \\"markdown\\",
      \\"codemirrorMode\\": \\"gfm\\",
      \\"codemirrorMimeType\\": \\"text/x-gfm\\",
      \\"wrap\\": true,
      \\"extensions\\": [
        \\".md\\",
        \\".markdown\\",
        \\".mdown\\",
        \\".mdwn\\",
        \\".mkd\\",
        \\".mkdn\\",
        \\".mkdown\\",
        \\".ron\\",
        \\".workbook\\"
      ],
      \\"filenames\\": [\\"README\\"],
      \\"tmScope\\": \\"source.gfm\\",
      \\"linguistLanguageId\\": 222,
      \\"vscodeLanguageIds\\": [\\"markdown\\"]
    }
  ],
  \\"options\\": [
    {
      \\"name\\": \\"arrowParens\\",
      \\"since\\": \\"1.9.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"choice\\",
      \\"default\\": \\"avoid\\",
      \\"description\\":
        \\"Include parentheses around a sole arrow function parameter.\\",
      \\"choices\\": [
        {
          \\"value\\": \\"avoid\\",
          \\"description\\": \\"Omit parens when possible. Example: \`x => x\`\\"
        },
        {
          \\"value\\": \\"always\\",
          \\"description\\": \\"Always include parens. Example: \`(x) => x\`\\"
        }
      ]
    },
    {
      \\"name\\": \\"bracketSpacing\\",
      \\"since\\": \\"0.0.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": true,
      \\"description\\": \\"Print spaces between brackets.\\",
      \\"oppositeDescription\\": \\"Do not print spaces between brackets.\\"
    },
    {
      \\"name\\": \\"cursorOffset\\",
      \\"since\\": \\"1.4.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"int\\",
      \\"default\\": -1,
      \\"range\\": { \\"start\\": -1, \\"end\\": null, \\"step\\": 1 },
      \\"description\\":
        \\"Print (to stderr) where a cursor at the given position would move to after formatting.\\\\nThis option cannot be used with --range-start and --range-end.\\"
    },
    {
      \\"name\\": \\"filepath\\",
      \\"since\\": \\"1.4.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"path\\",
      \\"description\\":
        \\"Specify the input filepath. This will be used to do parser inference.\\"
    },
    {
      \\"name\\": \\"insertPragma\\",
      \\"since\\": \\"1.8.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": false,
      \\"description\\": \\"Insert @format pragma into file's first docblock comment.\\"
    },
    {
      \\"name\\": \\"jsxBracketSameLine\\",
      \\"since\\": \\"0.17.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": false,
      \\"description\\": \\"Put > on the last line instead of at a new line.\\"
    },
    {
      \\"name\\": \\"parser\\",
      \\"since\\": \\"0.0.10\\",
      \\"category\\": \\"Global\\",
      \\"type\\": \\"choice\\",
      \\"default\\": \\"babylon\\",
      \\"description\\": \\"Which parser to use.\\",
      \\"choices\\": [
        { \\"value\\": \\"babylon\\", \\"description\\": \\"JavaScript\\" },
        { \\"value\\": \\"flow\\", \\"description\\": \\"Flow\\" },
        {
          \\"value\\": \\"typescript\\",
          \\"since\\": \\"1.4.0\\",
          \\"description\\": \\"TypeScript\\"
        },
        { \\"value\\": \\"css\\", \\"since\\": \\"1.7.1\\", \\"description\\": \\"CSS\\" },
        { \\"value\\": \\"less\\", \\"since\\": \\"1.7.1\\", \\"description\\": \\"Less\\" },
        { \\"value\\": \\"scss\\", \\"since\\": \\"1.7.1\\", \\"description\\": \\"SCSS\\" },
        { \\"value\\": \\"json\\", \\"since\\": \\"1.5.0\\", \\"description\\": \\"JSON\\" },
        { \\"value\\": \\"graphql\\", \\"since\\": \\"1.5.0\\", \\"description\\": \\"GraphQL\\" },
        { \\"value\\": \\"markdown\\", \\"since\\": \\"1.8.0\\", \\"description\\": \\"Markdown\\" }
      ]
    },
    {
      \\"name\\": \\"printWidth\\",
      \\"since\\": \\"0.0.0\\",
      \\"category\\": \\"Global\\",
      \\"type\\": \\"int\\",
      \\"default\\": 80,
      \\"description\\": \\"The line length where Prettier will try wrap.\\",
      \\"range\\": { \\"start\\": 0, \\"end\\": null, \\"step\\": 1 }
    },
    {
      \\"name\\": \\"proseWrap\\",
      \\"since\\": \\"1.8.2\\",
      \\"category\\": \\"Markdown\\",
      \\"type\\": \\"choice\\",
      \\"default\\": \\"preserve\\",
      \\"description\\": \\"How to wrap prose. (markdown)\\",
      \\"choices\\": [
        {
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"always\\",
          \\"description\\": \\"Wrap prose if it exceeds the print width.\\"
        },
        {
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"never\\",
          \\"description\\": \\"Do not wrap prose.\\"
        },
        {
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"preserve\\",
          \\"description\\": \\"Wrap prose as-is.\\"
        }
      ]
    },
    {
      \\"name\\": \\"rangeEnd\\",
      \\"since\\": \\"1.4.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"int\\",
      \\"default\\": null,
      \\"range\\": { \\"start\\": 0, \\"end\\": null, \\"step\\": 1 },
      \\"description\\":
        \\"Format code ending at a given character offset (exclusive).\\\\nThe range will extend forwards to the end of the selected statement.\\\\nThis option cannot be used with --cursor-offset.\\"
    },
    {
      \\"name\\": \\"rangeStart\\",
      \\"since\\": \\"1.4.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"int\\",
      \\"default\\": 0,
      \\"range\\": { \\"start\\": 0, \\"end\\": null, \\"step\\": 1 },
      \\"description\\":
        \\"Format code starting at a given character offset.\\\\nThe range will extend backwards to the start of the first line containing the selected statement.\\\\nThis option cannot be used with --cursor-offset.\\"
    },
    {
      \\"name\\": \\"requirePragma\\",
      \\"since\\": \\"1.7.0\\",
      \\"category\\": \\"Special\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": false,
      \\"description\\":
        \\"Require either '@prettier' or '@format' to be present in the file's first docblock comment\\\\nin order for it to be formatted.\\"
    },
    {
      \\"name\\": \\"semi\\",
      \\"since\\": \\"1.0.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": true,
      \\"description\\": \\"Print semicolons.\\",
      \\"oppositeDescription\\":
        \\"Do not print semicolons, except at the beginning of lines which may need them.\\"
    },
    {
      \\"name\\": \\"singleQuote\\",
      \\"since\\": \\"0.0.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": false,
      \\"description\\": \\"Use single quotes instead of double quotes.\\"
    },
    {
      \\"name\\": \\"tabWidth\\",
      \\"type\\": \\"int\\",
      \\"category\\": \\"Global\\",
      \\"default\\": 2,
      \\"description\\": \\"Number of spaces per indentation level.\\",
      \\"range\\": { \\"start\\": 0, \\"end\\": null, \\"step\\": 1 }
    },
    {
      \\"name\\": \\"trailingComma\\",
      \\"since\\": \\"0.0.0\\",
      \\"category\\": \\"JavaScript\\",
      \\"type\\": \\"choice\\",
      \\"default\\": \\"none\\",
      \\"description\\": \\"Print trailing commas wherever possible when multi-line.\\",
      \\"choices\\": [
        { \\"value\\": \\"none\\", \\"description\\": \\"No trailing commas.\\" },
        {
          \\"value\\": \\"es5\\",
          \\"description\\":
            \\"Trailing commas where valid in ES5 (objects, arrays, etc.)\\"
        },
        {
          \\"value\\": \\"all\\",
          \\"description\\":
            \\"Trailing commas wherever possible (including function arguments).\\"
        }
      ]
    },
    {
      \\"name\\": \\"useTabs\\",
      \\"since\\": \\"1.0.0\\",
      \\"category\\": \\"Global\\",
      \\"type\\": \\"boolean\\",
      \\"default\\": false,
      \\"description\\": \\"Indent with tabs instead of spaces.\\"
    }
  ]
}

"
`;

exports[`CLI --support-info (write) 1`] = `Array []`;
